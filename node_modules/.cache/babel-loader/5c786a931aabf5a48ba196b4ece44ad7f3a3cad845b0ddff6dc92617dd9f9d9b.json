{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport router from '../router';\nimport { APIService } from '../http/APIService';\nconst apiService = new APIService();\nexport default {\n  name: 'CustomerCreate',\n  components: {},\n  //prevent user from accessing this page if not authorized\n  beforeCreate() {\n    if (localStorage.getItem(\"isAuthenticated\") && JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true) {\n      this.authenticated = true;\n    } else {\n      this.authenticated = false;\n    }\n    if (this.authenticated === false) {\n      router.push(\"/auth\");\n    }\n  },\n  data() {\n    return {\n      showError: false,\n      customer: {},\n      pageTitle: \"Add New Customer\",\n      isUpdate: false,\n      showMsg: '',\n      authenticated: false\n    };\n  },\n  methods: {\n    createCustomer() {\n      apiService.addNewCustomer(this.customer).then(response => {\n        if (response.status === 201) {\n          this.customer = response.data;\n          this.showMsg = \"\";\n          router.push('/customer-list/new');\n        } else {\n          this.showMsg = \"error\";\n        }\n      }).catch(error => {\n        if (error.response.status === 401) {\n          // \"not authorized\"\n          router.push(\"/auth\");\n        } else if (error.response.status === 400) {\n          //\"bad request\"\n          this.showMsg = \"requestError\";\n        } else {\n          this.showMsg = \"error\";\n        }\n      });\n    },\n    cancelOperation() {\n      router.push(\"/customer-list\");\n    },\n    updateCustomer() {\n      apiService.updateCustomer(this.customer).then(response => {\n        if (response.status === 200) {\n          this.customer = response.data;\n          router.push('/customer-list/update');\n        } else {\n          this.showMsg = \"error\";\n        }\n      }).catch(error => {\n        if (error.response.status === 401) {\n          router.push(\"/auth\");\n        } else if (error.response.status === 400) {\n          this.showMsg = \"error\";\n        }\n      });\n    }\n  },\n  mounted() {\n    if (this.$route.params.pk) {\n      this.pageTitle = \"Edit Customer\";\n      this.isUpdate = true;\n      apiService.getCustomer(this.$route.params.pk).then(response => {\n        this.customer = response.data;\n      }).catch(error => {\n        if (error.response.status === 401) {\n          // \"not authorized\"\n          router.push(\"/auth\");\n        } else {\n          this.showMsg = \"error\";\n          router.push(\"/auth\");\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["router","APIService","apiService","name","components","beforeCreate","localStorage","getItem","JSON","parse","authenticated","push","data","showError","customer","pageTitle","isUpdate","showMsg","methods","createCustomer","addNewCustomer","then","response","status","catch","error","cancelOperation","updateCustomer","mounted","$route","params","pk","getCustomer"],"sources":["/Users/tomatosauce/Desktop/assign3-investments-part2-frontend-jaketamayo/investments-fe/src/components/CustomerCreate.vue"],"sourcesContent":["<template>\n    <div class=\"container-fluid\">\n        <div class=\"row align-items-center justify-content-center\">\n            <div class=\" col align-items-center\">\n                <div class=\"row align-items-center justify-content-center\">\n                    <div class=\"col col-12 col-sm-10 col-md-10 col-lg-6\">\n                        <div class=\"alert alert-danger shadow\" role=\"alert\" v-if=\"showMsg === 'error'\">\n                            Please verify Customer Information\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row align-items-center justify-content-center\">\n                    <div class=\"col col-12 col-sm-10 col-md-10 col-lg-6 align-items-center\">\n                        <div class=\"card\">\n                            <div class=\"card-header\">{{ pageTitle }}</div>\n                            <div class=\"card-body\">\n                                <form ref=\"form\">\n                                    <div class=\"container-fluid\">\n                                        <div class=\"form-group row justify-content-around py-2\">\n                                            <label class=\"col-4\">Customer #</label>\n                                            <div class=\"col col-8\">\n                                                <input v-model=\"customer.cust_number\" type=\"number\"\n                                                    class=\"form-control-sm form-control\">\n                                            </div>\n                                        </div>\n                                        <div class=\"form-group row justify-content-around py-2\">\n                                            <label class=\"col-4\">Name</label>\n                                            <div class=\"col col-8\">\n                                                <input v-model=\"customer.name\" type=\"text\"\n                                                    class=\"form-control-sm form-control\">\n                                            </div>\n                                        </div>\n                                        <div class=\"form-group row justify-content-around py-2\">\n                                            <label class=\"col-4\">Address</label>\n                                            <div class=\"col col-8\">\n                                                <input v-model=\"customer.address\" type=\"text\"\n                                                    class=\"form-control-sm form-control\">\n                                            </div>\n                                        </div>\n                                        <div class=\"form-group row justify-content-around py-2\">\n                                            <label class=\"col-4\">City</label>\n                                            <div class=\"col col-8\">\n                                                <input v-model=\"customer.city\" type=\"text\"\n                                                    class=\"form-control-sm form-control\">\n                                            </div>\n                                        </div>\n                                        <div class=\"form-group row justify-content-around py-2\">\n                                            <label class=\"col-4\">State</label>\n                                            <div class=\"col col-8\">\n                                                <input v-model=\"customer.state\" type=\"text\"\n                                                    class=\"form-control-sm form-control\">\n                                            </div>\n                                        </div>\n                                        <div class=\"form-group row justify-content-around py-2\">\n                                            <label class=\"col-4\">Zip Code</label>\n                                            <div class=\"col col-8\">\n                                                <input v-model=\"customer.zipcode\" type=\"text\"\n                                                    class=\"form-control-sm form-control\">\n                                            </div>\n                                        </div>\n                                        <div class=\"form-group row justify-content-around py-2\">\n                                            <label class=\"col-4\">Email</label>\n                                            <div class=\"col col-8\">\n                                                <input v-model=\"customer.email\" type=\"text\"\n                                                    class=\"form-control-sm form-control\">\n                                            </div>\n                                        </div>\n                                        <div class=\"form-group row justify-content-around py-2\">\n                                            <label class=\"col-4\">Phone</label>\n                                            <div class=\"col col-8\">\n                                                <input v-model=\"customer.cell_phone\" type=\"text\"\n                                                    class=\"form-control-sm form-control\">\n                                            </div>\n                                        </div>\n                                        <div class=\"row justify-content-around\">\n                                            <div v-if=\"!isUpdate\" type=\"button\" class=\"btn btn-primary col-4\"\n                                                @click=\"createCustomer\">Save</div>\n                                            <div v-if=\"isUpdate\" type=\"button\" class=\"btn btn-primary col-4\"\n                                                @click=\"updateCustomer\">Update</div>\n                                            <div type=\"button\" class=\"btn btn-secondary col-4\" @click=\"cancelOperation\">\n                                                Cancel</div>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n  <script>\nimport router from '../router';\nimport { APIService } from '../http/APIService';\nconst apiService = new APIService();\n\nexport default {\n    name: 'CustomerCreate',\n    components: {},\n    //prevent user from accessing this page if not authorized\n    beforeCreate() {\n        if (localStorage.getItem(\"isAuthenticated\") &&\n            JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true) {\n            this.authenticated = true\n        }\n        else {\n            this.authenticated = false\n        }\n        if (this.authenticated === false) {\n            router.push(\"/auth\");\n        }\n    },\n    data() {\n        return {\n            showError: false,\n            customer: {},\n            pageTitle: \"Add New Customer\",\n            isUpdate: false,\n            showMsg: '',\n            authenticated: false\n        };\n    },\n    methods: {\n        createCustomer() {\n            apiService.addNewCustomer(this.customer).then(response => {\n                if (response.status === 201) {\n                    this.customer = response.data;\n                    this.showMsg = \"\";\n                    router.push('/customer-list/new');\n                } else {\n                    this.showMsg = \"error\";\n                }\n            }).catch(error => {\n                if (error.response.status === 401) { // \"not authorized\"\n                    router.push(\"/auth\");\n                } else if (error.response.status === 400) { //\"bad request\"\n                    this.showMsg = \"requestError\";\n                } else {\n                    this.showMsg = \"error\";\n                }\n            });\n        },\n        cancelOperation() {\n            router.push(\"/customer-list\");\n        },\n        updateCustomer() {\n            apiService.updateCustomer(this.customer).then(response => {\n                if (response.status === 200) {\n                    this.customer = response.data;\n                    router.push('/customer-list/update');\n                } else {\n                    this.showMsg = \"error\";\n                }\n            }).catch(error => {\n                if (error.response.status === 401) {\n                    router.push(\"/auth\");\n                } else if (error.response.status === 400) {\n                    this.showMsg = \"error\";\n                }\n            });\n        }\n    },\n    mounted() {\n        if (this.$route.params.pk) {\n            this.pageTitle = \"Edit Customer\";\n            this.isUpdate = true;\n            apiService.getCustomer(this.$route.params.pk).then(response => {\n                this.customer = response.data;\n            }).catch(error => {\n                if (error.response.status === 401) { // \"not authorized\"\n                    router.push(\"/auth\");\n                } else {\n                    this.showMsg = \"error\";\n                    router.push(\"/auth\");\n                }\n            });\n        }\n    },\n}\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}